<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Staff Cancellation Requests | Zero Degree Café</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<style>
  .sidebar {
    height: 100vh; position: fixed; top: 0; left: 0; width: 250px;
    background: linear-gradient(145deg, #1d3c5a, #3a5f7d); color: white; padding-top: 30px;
    overflow-y: auto; box-shadow: 4px 0px 10px rgba(0, 0, 0, 0.1);
  }
  .sidebar h3 { text-align: center; font-size: 30px; font-weight: bold; margin-bottom: 30px; }
  .sidebar a { color: white; text-decoration: none; padding: 12px 20px; display: block;
    border-radius: 25px; font-size: 18px; margin: 10px 0; transition: all 0.3s ease; }
  .sidebar a:hover { background-color: #f1f1f1; color: #1d3c5a; transform: translateX(10px); }
  .sidebar a.active { background-color: #3a5f7d; color: white; }
  .sidebar .logout a { width: 150px; text-align: center; margin-top: 30px; font-size: 16px; }
  .sidebar .logout a:hover { background-color: #e74c3c; }
  .content { margin-left: 270px; padding: 20px; }
  .product-img { width: 35px; height: 35px; object-fit: cover; border-radius: 5px; margin-right: 5px; }
        #notifBtn {
      background: #3470ac;
      border: none;
      transition: all 0.3s;
      position: relative;
    }

    #notifBtn:hover {
      background: #7ea9d5;
    }

    #notifBadge {
      font-size: 0.75rem;
      min-width: 18px;
      min-height: 18px;
      padding: 3px;
    }
</style>
</head>
<body>

<div class="sidebar d-flex flex-column">
  <div class="d-flex justify-content-center mb-3">
    <img src="/images/zicon.jpg" style="width: 75px;" class="rounded-circle" alt="">
  </div>
  <h3 class="text-white mb-5">Staff Panel</h3>
  <a href="/staff/index"><i class="bi bi-house-door"></i> Dashboard</a>
  <a href="/staff/orders"><i class="bi bi-file-earmark-text"></i> Orders</a>
  <a href="/staff/void" class="active"><i class="bi bi-x-circle"></i> Cancellation Requests</a>
  <div class="logout d-flex justify-content-center mt-auto mb-3">
    <a href="/logout" class="btn btn-danger" style="width: 150px;">
      <i class="bi bi-box-arrow-right"></i> Logout
    </a>
  </div>
</div>

<div class="content">
    <div class="d-flex align-items-center justify-content-between mb-3">
      <h1 class="fw-bold mb-0">Pending Cancellation Requests</h1>

      <div class="position-relative">
        <button id="notifBtn" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#notifModal">
          <span class="text-light"><i class="bi bi-bell-fill fs-4"></i></span>
          <span id="notifBadge" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger d-none">0</span>
        </button>
      </div>
    </div><hr>

  <table class="table table-bordered table-hover">
    <thead>
      <tr>
        <th>Order ID</th>
        <th>User</th>
        <th>Items</th>
        <th>Total (₱)</th>
        <th>Requested At</th>
        <th>Reason</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <% if(cancellations.length > 0){ %>
        <% cancellations.forEach(order => { %>
          <tr>
            <td><%= order._id %></td>
            <td><%= order.userInfoSnapshot?.firstName || 'N/A' %> <%= order.userInfoSnapshot?.lastName || '' %></td>
            <td>
              <ul class="list-unstyled mb-0">
                <% order.items.forEach(item => { %>
                  <li class="d-flex align-items-center mb-1">
                    <img src="<%= item.productId?.productImage || '/images/no-image.jpg' %>" class="product-img">
                    <span><%= item.productId?.productName || 'Unknown' %> x <%= item.quantity %></span>
                  </li>
                <% }) %>
              </ul>
            </td>
            <td><%= order.netTotal.toFixed(2) %></td>
            <td><%= new Date(order.cancellationRequestedAt).toLocaleString() %></td>
            <td><%= order.cancellationReason && order.cancellationReason.trim() !== '' ? order.cancellationReason : 'Processing' %></td>
            <td>
              <button class="btn btn-success btn-sm mb-1 btn-approve" data-id="<%= order._id %>">Approve</button>
              <button class="btn btn-danger btn-sm btn-reject" data-id="<%= order._id %>">Reject</button>
            </td>
          </tr>
        <% }) %>
      <% } else { %>
        <tr>
          <td colspan="7" class="text-center">No pending cancellation requests.</td>
        </tr>
      <% } %>
    </tbody>
  </table>
</div>

  <div class="modal fade" id="notifModal" tabindex="-1" aria-labelledby="notifModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
      <div class="modal-content" 
          style="border-radius:15px; overflow:hidden; box-shadow:0 4px 20px rgba(0,0,0,0.3); border:none;">

        <div class="modal-header text-white" 
            style="background:linear-gradient(145deg, #1d3c5a, #3a5f7d); border-bottom:none;">
          <h5 class="modal-title fw-bold" id="notifModalLabel" style="font-size:1.25rem;">
            <i class="bi bi-bell-fill me-2"></i> Notifications
          </h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>

        <div class="modal-body" style="background-color:#f8fafc; max-height:400px; overflow-y:auto; padding:1.5rem;">
          <div id="notifList" class="list-group" 
              style="border-radius:10px; box-shadow:inset 0 0 5px rgba(0,0,0,0.05);">
            <p class="text-center text-muted mb-0" style="font-style:italic;">No notifications yet.</p>
          </div>
        </div>

        <div class="modal-footer" 
            style="background-color:#f1f5f9; border-top:1px solid #dee2e6; justify-content:center;">
          <button id="clearNotif" class="btn text-white fw-semibold px-4" data-bs-dismiss="modal"
                  style="background:linear-gradient(145deg, #1d3c5a, #3a5f7d); border:none; border-radius:25px; transition:0.3s;">
            <i class="bi bi-x-circle me-1"></i> Clear Notifications
          </button>
        </div>

      </div>
    </div>
  </div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.btn-approve').forEach(btn => {
    btn.addEventListener('click', async () => {
      const orderId = btn.dataset.id;
      const result = await Swal.fire({
        title: 'Approve Cancellation?',
        text: "This will approve the user's cancellation request and restore stock.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#198754',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, approve it!',
      });
      if (result.isConfirmed) {
        try {
          const res = await fetch(`/staff/cancellations/${orderId}/approve`, { method: 'POST' });
          const data = await res.json();
          if (res.ok) {
            Swal.fire({ icon: 'success', title: 'Approved', text: data.message }).then(() => location.reload());
          } else {
            Swal.fire({ icon: 'error', title: 'Error', text: data.message || 'Failed to approve' });
          }
        } catch (err) {
          Swal.fire({ icon: 'error', title: 'Server Error', text: 'Failed to approve cancellation' });
        }
      }
    });
  });

  document.querySelectorAll('.btn-reject').forEach(btn => {
    btn.addEventListener('click', async () => {
      const orderId = btn.dataset.id;
      const result = await Swal.fire({
        title: 'Reject Cancellation?',
        text: "This will reject the user's cancellation request.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, reject it!',
      });
      if (result.isConfirmed) {
        try {
          const res = await fetch(`/staff/cancellations/${orderId}/reject-proof`, { method: 'POST' });
          const data = await res.json();
          if (res.ok) {
            Swal.fire({ icon: 'success', title: 'Rejected', text: data.message }).then(() => location.reload());
          } else {
            Swal.fire({ icon: 'error', title: 'Error', text: data.message || 'Failed to reject' });
          }
        } catch (err) {
          Swal.fire({ icon: 'error', title: 'Server Error', text: 'Failed to reject cancellation' });
        }
      }
    });
  });

});
</script>
<script>
    const notifBadge = document.getElementById('notifBadge');
    const notifList = document.getElementById('notifList');
    let notifCount = 0;

    async function loadPendingOrders() {
      try {
        const res = await fetch('/staff/notifications/pending');
        const data = await res.json();

        if (data.length > 0) {
          notifList.innerHTML = '';
          data.forEach(order => {
            const type = order.status === 'Pending' ? 'info' : 'warning';
            const title = order.status === 'Pending' ? 'New Order' : 'Cancellation Request';
            const link = order.status === 'Pending' ? '/staff/orders' : '/staff/void';
            addNotification(type, title, `Order #${order._id} from ${order.userInfoSnapshot?.firstName || 'Customer'}`, link, false);
          });
        }
      } catch (err) {
        console.error('Error loading pending orders:', err);
      }
    }

    const eventSource = new EventSource('/staff/notifications');
    eventSource.addEventListener('newOrder', e => {
      const data = JSON.parse(e.data);
      addNotification('info', 'New Order', data.message, '/staff/orders', true);
    });
    eventSource.addEventListener('cancelRequest', e => {
      const data = JSON.parse(e.data);
      addNotification('warning', 'Cancellation Request', data.message, '/staff/void', true);
    });

    function addNotification(type, title, message, link, showToastNow = true) {
      notifCount++;
      updateBadge();

      const icon = type === 'info' ? 'bi-cart-check' : 'bi-x-circle';
      const listItem = document.createElement('a');
      listItem.href = link;
      listItem.className = `list-group-item list-group-item-action list-group-item-${type === 'info' ? 'primary' : 'danger'} d-flex justify-content-between align-items-center`;
      listItem.innerHTML = `
        <div>
          <i class="bi ${icon} me-2"></i>
          <strong>${title}</strong> - ${message}
        </div>
        <small class="text-muted">${new Date().toLocaleTimeString()}</small>
      `;

      if (notifList.querySelector('p')) notifList.innerHTML = '';
      notifList.prepend(listItem);

      if (showToastNow) showToast(type, title, message);
    }

    function updateBadge() {
      notifBadge.textContent = notifCount;
      notifBadge.classList.remove('d-none');
    }

    function showToast(icon, title, message) {
      Swal.fire({
        icon,
        title,
        text: message,
        timer: 2500,
        toast: true,
        position: 'top-end',
        showConfirmButton: false
      });
    }

    document.getElementById('clearNotif').addEventListener('click', () => {
      notifCount = 0;
      notifBadge.classList.add('d-none');
      notifList.innerHTML = '<p class="text-center text-muted mb-0">No notifications yet.</p>';
    });

    loadPendingOrders();
  </script>
</body>
</html>
