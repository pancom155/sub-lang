<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Dashboard | Zero Degree Café</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    .sidebar {
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      width: 250px;
      background: linear-gradient(145deg, #1d3c5a, #3a5f7d);
      color: white;
      padding-top: 30px;
      overflow-y: auto;
      box-shadow: 4px 0px 10px rgba(0, 0, 0, 0.1);
    }
    .sidebar h3 {
      text-align: center;
      font-size: 30px;
      font-weight: bold;
      margin-bottom: 30px;
    }
    .sidebar a {
      color: white;
      text-decoration: none;
      padding: 12px 18px;
      display: block;
      border-radius: 25px;
      font-size: 16px;
      margin: 10px 0;
      transition: all 0.3s ease;
    }
    .sidebar a:hover {
      background-color: #f1f1f1;
      color: #1d3c5a;
      transform: translateX(10px);
    }
    .sidebar a.active {
      background-color: #3a5f7d;
      color: white;
    }
    .sidebar .logout {
      position: absolute;
      bottom: 20px;
      width: 100%;
      text-align: center;
    }
    .content {
      margin-left: 270px;
      padding: 20px;
    }
    .card {
      border-radius: 12px;
      box-shadow: 0 6px 18px rgba(0,0,0,0.06);
    }
    .most-bought-header {
      font-weight: 700;
      color: #1d3c5a;
      margin-bottom: 20px;
    }
    .donut-wrap {
      position: relative;
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .donut-center {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      text-align: center;
      pointer-events: none;
    }
    .donut-center .big {
      font-size: 22px;
      font-weight: 800;
      color: #1d3c5a;
    }
    .donut-center .label {
      font-size: 12px;
      color: #6c757d;
    }
    .product-list {
      max-height: 220px;
      overflow-y: auto;
      margin-top: 12px;
      border-top: 1px dashed #e9ecef;
      padding-top: 10px;
    }
    .product-item {
      display: flex;
      justify-content: space-between;
      padding: 6px 0;
      border-bottom: 1px solid rgba(0,0,0,0.03);
    }
    .product-item:last-child {
      border-bottom: none;
    }
    .donut-wrap {
      position: relative;
      width: 280px;
      height: 280px;
      margin: 0 auto;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .donut-wrap canvas {
      width: 100% !important;
      height: 100% !important;
    }
    .donut-center {
      position: absolute;
      text-align: center;
      pointer-events: none;
    }
    .donut-center .big {
      font-size: 1.5rem;
      font-weight: bold;
    }
    .donut-center .label {
      font-size: 0.9rem;
      color: #666;
    }
    .top-products-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }
    .product-card {
      display: flex;
      align-items: center;
      background: #fff;
      border: 1px solid #ddd;
      border-radius: 12px;
      padding: 12px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.08);
      transition: transform 0.2s ease;
    }
    .product-card:hover {
      transform: translateY(-3px);
    }
    .product-card img {
      width: 50px;
      height: 50px;
      border-radius: 8px;
      object-fit: cover;
      margin-right: 12px;
    }
    .product-info {
      flex-grow: 1;
    }
    .product-info .name {
      font-weight: 700;
      color: #0d3b57;
      font-size: 15px;
    }
    .product-info .sold {
      font-size: 13px;
      color: #6c757d;
    }
    .product-icon {
      font-size: 1.5rem;
      color: #0d6efd;
      margin-left: auto;
    }
    .most-bought-header {
      font-weight: 700;
      color: #0d3b57;
      margin-bottom: 15px;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .most-bought-card {
      display: flex;
      align-items: center;
      gap: 12px;
      background: #fff;
      border: 1px solid #e5e7eb;
      border-radius: 10px;
      padding: 10px 14px;
      transition: all 0.2s ease-in-out;
      box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }
    .most-bought-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 10px rgba(0,0,0,0.08);
    }
    .most-bought-card img {
      width: 45px;
      height: 45px;
      border-radius: 8px;
      object-fit: cover;
    }
    .most-bought-card small {
      font-weight: 600;
      color: #495057;
    }
    .trend-card {
      border-radius: 1rem;
      overflow: hidden;
      transition: all 0.3s ease;
    }
    .trend-card .card-header {
      font-size: 1.1rem;
      letter-spacing: 0.5px;
    }
    .badge.bg-gradient {
      background: linear-gradient(135deg, #0d6efd, #4dabf7);
      border-radius: 0.75rem;
    }
    
  </style>
</head>
<body>
  <div class="sidebar">
    <div class="d-flex justify-content-center mb-3">
      <img src="/images/zicon.jpg" style="width: 75px;" class="rounded-circle" alt="" />
    </div>
    <h3 class="text-center text-white mb-4 fw-bold">Admin Panel</h3>
    <a href="/admin/index" class="active"><i class="bi bi-house-door"></i> Dashboard</a>
    <a href="/admin/sales"><i class="bi bi-bar-chart"></i> Sales Overview</a>
    <a href="/admin/users"><i class="bi bi-person"></i> Users</a>
    <a href="/admin/products"><i class="bi bi-box"></i> Inventory</a>
    <a href="/admin/productMonitoring"><i class="bi bi-display"></i> Product Monitoring</a>
    <a href="/admin/orders"><i class="bi bi-file-earmark-text"></i> Orders</a>
    <a href="/admin/staff"><i class="bi bi-person-badge"></i> Staff</a>
    <a href="/admin/spoilage"><i class="bi bi-trash"></i> Spoilage</a>
    <a href="/admin/reviews"><i class="bi bi-star"></i> Reviews</a>
    <div class="logout">
      <a href="/logout" style="width: 150px;" class="btn btn-danger btn-sm mx-auto"><i class="bi bi-box-arrow-right"></i> Logout</a>
    </div>
  </div>

  <div class="content">
    <div class="row g-4">
      <div class="col-lg-6">
        <h3 class="most-bought-header">Top Selling Products</h3>
        <% if (!mostBoughtProducts || mostBoughtProducts.length === 0) { %>
          <p>No sales data available.</p>
        <% } else { %>
          <div class="top-products-grid">
            <% mostBoughtProducts.slice(0,6).forEach(product => { %>
              <div class="product-card">
                <img src="<%= product.productImage %>" alt="<%= product.productName %>">
                <div class="product-info">
                  <div class="name"><%= product.productName %></div>
                  <div class="sold">
                    <i class="bi bi-bag-check-fill text-success"></i>
                    Sold: <span style="font-weight:800;"><%= product.totalQuantity %></span>
                  </div>
                </div>
                <i class="bi bi-star-fill product-icon"></i>
              </div>
            <% }) %>
          </div>
        <% } %>
      </div>
      
      <div class="col-lg-6">
        <h3 class="most-bought-header">Daily Orders</h3>
        <% if (!dailyOrders || dailyOrders.length === 0) { %>
          <p>No daily orders found.</p>
        <% } else { %>
          <% dailyOrders.forEach(order => { %>
            <div class="most-bought-card mb-2">
              <img src="<%= order.image || '/images/default.jpg' %>" alt="Order">
              <div style="flex:1;">
                <div style="font-weight:700;"><small>Order ID:</small> <%= order.orderId %></div>
                <div style="font-size:13px; color:#6c757d;">
                  <small>Status:</small>
                  <% if (order.status === 'Completed') { %>
                    <span class="badge bg-success"><%= order.status %></span>
                  <% } else if (order.status === 'Pending') { %>
                    <span class="badge bg-warning text-dark"><%= order.status %></span>
                  <% } else if (order.status === 'Cancelled') { %>
                    <span class="badge bg-danger"><%= order.status %></span>
                  <% } else { %>
                    <%= order.status %>
                  <% } %>
                </div>
                <div style="font-size:13px; color:#6c757d; margin-top:6px;">
                  <small>Items:</small> <%= order.productList %>
                </div>
              </div>
              <div style="min-width:75px; text-align:right; font-weight:800; color:#0d3b57;">₱<%= order.totalAmount %></div>
            </div>
          <% }); %>

          <div class="mt-3 d-flex justify-content-center">
            <nav aria-label="Daily Orders Pagination">
              <ul class="pagination">
                <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                  <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
                </li>
                <% for(let i = 1; i <= totalPages; i++) { %>
                  <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                  </li>
                <% } %>
                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                  <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                </li>
              </ul>
            </nav>
          </div>
        <% } %>
      </div>
    </div>
    
    <hr class="my-4">
    <div class="row g-3 mt-4 mb-3">
      <div class="col-md-4 d-flex">
        <div class="card text-center shadow-lg border-0 flex-fill">
          <div class="card-body d-flex flex-column justify-content-center">
            <div class="d-flex align-items-center justify-content-center mb-2">
              <i class="bi bi-star-fill fs-3 text-warning me-2"></i>
              <h5 class="card-title mb-0">Total Reviews</h5>
            </div>
            <h2 class="fw-bold text-warning"><%= reviewKpi.totalReviews %></h2>
            <p class="text-muted mb-0">All products</p>
          </div>
        </div>
      </div>

      <div class="col-md-4 d-flex">
        <div class="card text-center shadow-lg border-0 flex-fill">
          <div class="card-body d-flex flex-column justify-content-center">
            <div class="d-flex align-items-center justify-content-center mb-2">
              <i class="bi bi-star-half fs-3 text-primary me-2"></i>
              <h5 class="card-title mb-0">Average Rating</h5>
            </div>
            <h2 class="fw-bold text-primary"><%= reviewKpi.avgRating %> / 5</h2>
            <p class="text-muted mb-0">Across all reviews</p>
          </div>
        </div>
      </div>

      <div class="col-md-4 d-flex">
        <div class="card text-center shadow-lg border-0 flex-fill">
          <div class="card-body d-flex flex-column justify-content-center">
            <div class="d-flex align-items-center justify-content-center mb-2">
              <i class="bi bi-award fs-3 text-success me-2"></i>
              <h5 class="card-title mb-0">Top Rated Product</h5>
            </div>
            <% if (reviewKpi.topRatedProducts.length > 0) { %>
              <div class="d-flex flex-column align-items-center">
                <img src="<%= reviewKpi.topRatedProducts[0].image %>" class="rounded mb-1" style="width:50px; height:50px; object-fit:cover;">
                <div style="font-weight:700; font-size:14px;"><%= reviewKpi.topRatedProducts[0].name %></div>
                <div style="color:#495057; font-size:13px;">Rating: <%= reviewKpi.topRatedProducts[0].avg.toFixed(2) %> / 5</div>
              </div>
            <% } else { %>
              <p class="text-muted mb-0">No reviews yet</p>
            <% } %>
          </div>
        </div>
      </div>
    </div>

<div class="row g-4 mb-4">
  <!-- Stock on top -->
  <div class="col-12">
    <div class="card p-3">
      <div class="d-flex justify-content-between align-items-center mb-2">
        <h5 class="mb-0">Stock</h5>
        <select id="stockProductSelect" class="form-select form-select-sm w-auto">
          <option value="__all__">All</option>
          <% (stockBreakdown.products || []).forEach(p => { %>
            <option value="<%- p.name.replace(/"/g, '&quot;') %>"><%- p.name %></option>
          <% }) %>
        </select>
      </div>
      <div class="chart-container" style="height:250px;">
        <canvas id="stockBarChart"></canvas>
      </div>
    </div>
  </div>
</div>


    <div class="row g-4 align-items-start mb-3">
      <div class="col-md-6">
        <div class="card p-3">
          <div class="d-flex justify-content-between align-items-center mb-2">
            <h5 class="mb-0">Users</h5>
            <select id="userTypeSelect" class="form-select form-select-sm w-auto">
              <option value="total">Total</option>
              <option value="user">Users</option>
              <option value="staff">Staff</option>
              <option value="kitchen">Kitchen Staff</option>
            </select>
          </div>
          <div class="donut-wrap">
            <canvas id="userDonutChart"></canvas>
            <div class="donut-center" id="userCenter">
              <div class="big"><%= usersBreakdown.total %></div>
              <div class="label">Total Users</div>
            </div>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="card p-3">
          <div class="d-flex justify-content-between align-items-center mb-2">
            <h5 class="mb-0">Orders</h5>
            <select id="orderTypeSelect" class="form-select form-select-sm w-auto">
              <option value="all">All</option>
              <option value="pending">Pending</option>
              <option value="completed">Completed</option>
              <option value="cancelled">Cancelled</option>
            </select>
          </div>
          <div class="donut-wrap">
            <canvas id="orderStatusDonutChart"></canvas>
            <div class="donut-center" id="orderCenter">
              <div class="big">
                <%= ordersBreakdown.pending + ordersBreakdown.completed + ordersBreakdown.cancelled %>
              </div>
              <div class="label">Total Orders</div>
            </div>
          </div>
        </div>
      </div>
    </div>

      <div class="row g-3">
        <div class="col-md-4 d-flex">
          <div class="card text-center shadow-lg border-0 flex-fill">
            <div class="card-body d-flex flex-column justify-content-center">
              <div class="d-flex align-items-center justify-content-center mb-2">
                <i class="bi bi-cash-stack fs-3 text-success me-2"></i>
                <h5 class="card-title mb-0">Total Sales (All Time)</h5>
              </div>
              <h2 class="fw-bold text-success">₱ <%= totalSales.toLocaleString() %></h2>
            </div>
          </div>
        </div>

      <div class="col-md-4 d-flex">
        <div class="card text-center shadow-lg border-0 flex-fill">
          <div class="card-body d-flex flex-column justify-content-between">
            <div>
              <div class="d-flex justify-content-between align-items-center mb-2">
                <div class="d-flex align-items-center">
                  <i class="bi bi-bar-chart-line fs-3 text-primary me-2"></i>
                  <h5 class="card-title mb-0">Monthly Sales</h5>
                </div>
                <form method="GET" action="/admin/dashboard" class="d-flex gap-2">
                  <select name="salesMonth" class="form-select form-select-sm">
                    <% for (let m = 1; m <= 12; m++) { %>
                      <option value="<%= m %>" <%= m === selectedSalesMonth ? "selected" : "" %>>
                        <%= new Date(2024, m-1).toLocaleString("default", { month: "short" }) %>
                      </option>
                    <% } %>
                  </select>
                  <select name="salesYear" class="form-select form-select-sm">
                    <% for (let y = new Date().getFullYear(); y >= 2020; y--) { %>
                      <option value="<%= y %>" <%= y === selectedSalesYear ? "selected" : "" %>><%= y %></option>
                    <% } %>
                  </select>
                  <button type="submit" class="btn btn-sm btn-outline-primary"><i class="bi bi-search"></i></button>
                </form>
              </div>
              <h2 class="fw-bold text-primary">₱ <%= monthlySales.toLocaleString() %></h2>
              <p class="text-muted mb-0">Sales in <%= salesMonth %> <%= salesYear %></p>
            </div>
          </div>
        </div>
      </div>

      <div class="col-md-4 d-flex">
        <div class="card text-center shadow-lg border-0 flex-fill">
          <div class="card-body d-flex flex-column justify-content-between">
            <div>
              <div class="d-flex justify-content-between align-items-center mb-2">
                <div class="d-flex align-items-center">
                  <i class="bi bi-receipt-cutoff fs-3 text-warning me-2"></i>
                  <h5 class="card-title mb-0">Monthly Orders</h5>
                </div>
                <form method="GET" action="/admin/dashboard" class="d-flex gap-2">
                  <select name="ordersMonth" class="form-select form-select-sm">
                    <% for (let m = 1; m <= 12; m++) { %>
                      <option value="<%= m %>" <%= m === selectedOrdersMonth ? "selected" : "" %>>
                        <%= new Date(2024, m-1).toLocaleString("default", { month: "short" }) %>
                      </option>
                    <% } %>
                  </select>
                  <select name="ordersYear" class="form-select form-select-sm">
                    <% for (let y = new Date().getFullYear(); y >= 2020; y--) { %>
                      <option value="<%= y %>" <%= y === selectedOrdersYear ? "selected" : "" %>><%= y %></option>
                    <% } %>
                  </select>
                  <button type="submit" class="btn btn-sm btn-outline-warning"><i class="bi bi-search"></i></button>
                </form>
              </div>
              <h2 class="fw-bold text-warning"><%= monthlyOrdersCount.toLocaleString() %></h2>
              <p class="text-muted mb-0">Orders in <%= ordersMonth %> <%= ordersYear %></p>
            </div>
          </div>
        </div>
      </div>

    </div>

    <div class="card mt-4 shadow-lg border-0 trend-card">
      <div class="card-header bg-transparent border-0 d-flex align-items-center justify-content-between">
        <h5 class="mb-0 fw-bold text-primary d-flex align-items-center">
          <i class="bi bi-graph-up-arrow me-2"></i> Sales Trend (Last 6 Months)
        </h5>
        <span class="badge bg-gradient px-3 py-2">
          <i class="bi bi-check-circle me-1"></i> Updated
        </span>
      </div>
      <div class="card-body p-4" style="height:420px;">
        <canvas id="salesTrendChart"></canvas>
      </div>
    </div>

  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

  <script>
    const usersBreakdown = <%- JSON.stringify(usersBreakdown) %>;
    const ordersBreakdown = <%- JSON.stringify(ordersBreakdown) %>;
    const stockBreakdown = <%- JSON.stringify(stockBreakdown) %>;
    function genColors(n) {
      const colors = [];
      for (let i = 0; i < n; i++) {
        colors.push(`hsl(${(i*60)%360}, 65%, 55%)`);
      }
      return colors;
    }
    const userChart = new Chart(document.getElementById('userDonutChart'), {
      type: 'doughnut',
      data: {
        labels: ['Users','Staff','Kitchen'],
        datasets: [{
          data: [usersBreakdown.user, usersBreakdown.staff, usersBreakdown.kitchen],
          backgroundColor: genColors(3),
        }]
      },
      options: { cutout: '70%', plugins: { legend: { position: 'bottom' } } }
    });

    document.getElementById('userTypeSelect').addEventListener('change', function() {
      const v = this.value;
      const center = document.querySelector('#userCenter .big');
      if (v === 'total') {
        userChart.data.labels = ['Users','Staff','Kitchen'];
        userChart.data.datasets[0].data = [usersBreakdown.user, usersBreakdown.staff, usersBreakdown.kitchen];
        center.textContent = usersBreakdown.total;
      } else {
        userChart.data.labels = [v];
        userChart.data.datasets[0].data = [usersBreakdown[v] || 0];
        center.textContent = usersBreakdown[v] || 0;
      }
      userChart.data.datasets[0].backgroundColor = genColors(userChart.data.labels.length);
      userChart.update();
    });

    const orderChart = new Chart(document.getElementById('orderStatusDonutChart'), {
      type: 'doughnut',
      data: {
        labels: ['Pending','Completed','Cancelled'],
        datasets: [{
          data: [ordersBreakdown.pending, ordersBreakdown.completed, ordersBreakdown.cancelled],
          backgroundColor: ['#f6c23e','#1cc88a','#e74a3b']
        }]
      },
      options: { cutout: '70%', plugins: { legend: { position: 'bottom' } } }
    });

    document.getElementById('orderTypeSelect').addEventListener('change', function() {
      const v = this.value;
      const center = document.querySelector('#orderCenter .big');
      if (v === 'all') {
        orderChart.data.labels = ['Pending','Completed','Cancelled'];
        orderChart.data.datasets[0].data = [ordersBreakdown.pending, ordersBreakdown.completed, ordersBreakdown.cancelled];
        center.textContent = ordersBreakdown.pending + ordersBreakdown.completed + ordersBreakdown.cancelled;
      } else {
        orderChart.data.labels = [v.charAt(0).toUpperCase()+v.slice(1)];
        orderChart.data.datasets[0].data = [ordersBreakdown[v] || 0];
        center.textContent = ordersBreakdown[v] || 0;
      }
      orderChart.data.datasets[0].backgroundColor = genColors(orderChart.data.labels.length);
      orderChart.update();
    });

    const stockProducts = stockBreakdown.products || [];

    const stockChart = new Chart(document.getElementById('stockBarChart'), {
      type: 'bar',
      data: {
        labels: stockProducts.map(p => p.name),
        datasets: [{
          label: "Stock",
          data: stockProducts.map(p => p.stock),
          backgroundColor: genColors(stockProducts.length),
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: { display: false }
        },
        scales: {
          y: {
            beginAtZero: true,
            title: { display: true, text: 'Stock Count' }
          },
          x: {
            title: { display: true, text: 'Products' }
          }
        }
      }
    });

    const stockSelect = document.getElementById('stockProductSelect');
    stockSelect.addEventListener('change', function() {
      const v = this.value;
      if (v === '__all__') {
        stockChart.data.labels = stockProducts.map(p => p.name);
        stockChart.data.datasets[0].data = stockProducts.map(p => p.stock);
      } else {
        const p = stockProducts.find(x => x.name === v);
        stockChart.data.labels = [p ? p.name : v];
        stockChart.data.datasets[0].data = [p ? p.stock : 0];
      }
      stockChart.data.datasets[0].backgroundColor = genColors(stockChart.data.labels.length);
      stockChart.update();
    });

  </script>

  <script>
    const trendCtx = document.getElementById("salesTrendChart").getContext("2d");
    const gradient = trendCtx.createLinearGradient(0, 0, 0, 400);
    gradient.addColorStop(0, "rgba(13, 110, 253, 0.4)");
    gradient.addColorStop(1, "rgba(13, 110, 253, 0)");
    new Chart(trendCtx, {
      type: "line",
      data: {
        labels: <%- JSON.stringify(productTrendData.map(d => d.month)) %>,
        datasets: [{
          label: "Sales (₱)",
          data: <%- JSON.stringify(productTrendData.map(d => d.sales)) %>,
          borderColor: "#0d6efd",
          backgroundColor: gradient,
          borderWidth: 3,
          fill: true,
          tension: 0.4,
          pointBackgroundColor: "#fff",
          pointBorderColor: "#0d6efd",
          pointBorderWidth: 2,
          pointRadius: 6,
          pointHoverRadius: 8,
          pointHoverBackgroundColor: "#0d6efd",
          pointHoverBorderColor: "#fff"
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: false
          },
          tooltip: {
            backgroundColor: "#0d6efd",
            titleColor: "#fff",
            bodyColor: "#fff",
            padding: 10,
            cornerRadius: 8,
            displayColors: false,
            callbacks: {
              label: function(context) {
                return "₱ " + context.formattedValue;
              }
            }
          }
        },
        scales: {
          x: {
            grid: { display: false }
          },
          y: {
            ticks: {
              callback: function(value) {
                return "₱ " + value.toLocaleString();
              }
            },
            grid: { color: "rgba(0,0,0,0.05)" }
          }
        }
      }
    });
  </script>
<script>
  (function() {
    sessionStorage.setItem("currentPage", "admin");

    async function autoLogout() {
      try {
        await fetch("/logout", { method: "POST" });
        window.location.replace("/login");
      } catch (err) {
        console.error("Auto logout failed:", err);
      }
    }

    window.addEventListener("popstate", async () => {
      console.log("Detected back/forward navigation → logging out");
      await autoLogout();
    });

    history.pushState(null, "", location.href);
    window.onpopstate = function() {
      history.pushState(null, "", location.href);
      autoLogout(); 
    };

    window.addEventListener("pageshow", function(event) {
      if (event.persisted) {
        autoLogout();
      }
    });
  })();
</script>
</body>
</html>
